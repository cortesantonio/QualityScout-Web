@model ScannerCC.Models.Informes

@{
    Layout = null;
    bool isEspecialista = User.IsInRole("Especialista");
    bool isControlCalidad = User.IsInRole("Control de Calidad");
}

<style>
    .container {
        position: relative;
        z-index: 1; /* Asegura que el contenido esté por encima de las imágenes de fondo */
        max-width: 500px; /* Ajusta el ancho máximo que desees */
        margin: auto; /* Centra el contenedor en la pantalla */
    }

    .form-group {
        margin-bottom: 15px;
    }

    label, dt {
        color: #4B0404; /* Cambia este valor por el color que desees */
        font-family: Arial;
        border: none;
        padding: 5px;
    }

    input, dd {
        color: black; /* Color del texto */
        padding: 5px; /* Espaciado interno */
        border-radius: 5px; /* Bordes redondeados (opcional) */
        font-family: Arial;
        font-size: 12px;
        background-color: #DBD7D7;
        border: none;
    }

        input.acc {
            background-color: #BF6565;
            width: 30%;
        }

    select {
        color: black; /* Color del texto */
        background-color: #DBD7D7; /* Color de fondo */
        padding: 5px; /* Espaciado interno */
        border-radius: 5px; /* Bordes redondeados (opcional) */
        font-family: Arial;
        border: none;
    }

    button {
        color: white; /* Color del texto */
        padding: 5px; /* Espaciado interno */
        background-color: #BF6565;
        border-radius: 5px; /* Bordes redondeados (opcional) */
        font-family: Arial;
        border: none;
        width: 30%;
    }

        button.btn {
            background-color: black;
            width: 30%;
        }

    input, select, dd {
        width: 100%;
        margin: 5px;
    }

    button[type="submit"] {
        background-color: #BF6565;
        color: white;
        width: 30%;
    }

        button[type="submit"]:hover {
            background-color: #F25757;
            color: white;
            width: 30%;
        }

    #descargarInforme {
        display: block;
        margin: 20px auto;
        font-size: 20px;
        background-color: black;
        color: white;
        border: none;
        padding: 10px 20px;
        cursor: pointer;
    }

        /* Efecto de hover para el botón */
        #descargarInforme:hover {
            background-color: #333; /* Fondo ligeramente más claro cuando se pasa el mouse */
        }

    a {
        color: white;
    }

        a:hover {
            color: #62EBF0;
        }

    h3 {
        color: #4B0404;
    }

    .titulos {
        font-family: Arial;
        font-size: 10px;
        padding-left: 5px;
    }

    .profile-header {
        display: flex;
        align-items: center; /* Alinea verticalmente la imagen y el texto */
        margin-bottom: 20px;
    }

    .profile-image {
        width: 180px;
        height: 180px;
        border-radius: 50%;
        background-color: #260202;
        margin-top: 60px;
        margin-left: 80px;
    }

    .info-left {
        text-align: center;
        margin-top: 80px;
    }

    .modal {
        display: none; /* Oculto por defecto */
        position: fixed;
        z-index: 100; /* Asegura que está por encima del contenido */
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5); /* Fondo semi-transparente */
    }

    /* El contenedor de contenido del modal */
    .modal-content {
        background-color: #fff;
        margin: 15% auto;
        padding: 20px;
        border-radius: 8px;
        width: 400px;
        text-align: center;
        font-family: 'Open Sans', sans-serif;
    }

    /* Título de alerta */
    .alerta {
        color: #260202;
        font-size: 24px;
        margin-bottom: 15px;
    }

    /* Texto dentro del modal */
    .modal-content p {
        font-size: 18px;
        color: #333;
    }

    /* Botones del modal */
    .modal-buttons {
        margin-top: 20px;
    }

    /* Texto destacado en rojo */
    .desactivar {
        color: #f25757;
    }

</style>

<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="icon" href="~/Extras/favicon.png" type="image/x-icon">
    <title>QS - Ver informe</title>
    <link rel="stylesheet" href="~/css/Nav.css">
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/html2pdf.js/0.9.2/html2pdf.bundle.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css" integrity="sha512-Kc323vGBEqzTmouAECnVceyQqyqdsSiqLQISBL29aUW4U/M7pSPA/gEUZQqv1cwx4OnYxTxve5UMg5GT6L4JJg==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Open+Sans:ital,wght@0,300..800;1,300..800&display=swap" rel="stylesheet">
    <style>
        .informesContainer h2, .informesContainer h3, .informesContainer p,
        .informesContainer .Título, .informesContainer .enfoque, .informesContainer .Contenido,
        .informesContainer .encargado {
            color: black;
        }
    </style>
</head>
<body>
    <header>
        <nav class="nav-i">
            <a href="@Url.Action("RedirigirSegunRol", "Home")">
                <img class="logoqs" src="~/Extras/QualityScoutLogo.png" alt="Logo de Quality Scout">
            </a>
            <div class="navstyle">
                @if (isEspecialista)
                {
                    <div class="iconosnav">
                        <a asp-action="Index" asp-controller="Especialista">
                            <img src="~/Extras/home.png" alt="Inicio" />
                        </a>
                    </div>
                    <div class="iconosnav">
                        <a asp-action="GestionUsuarios" asp-controller="Usuario">
                            <img src="~/Extras/usuarios.png" alt="Usuarios" />
                        </a>
                    </div>
                    <div class="iconosnav">
                        <a asp-action="Controles" asp-controller="Controles">
                            <img src="~/Extras/controles.png" alt="Controles" />
                        </a>
                    </div>
                    <div class="iconosnav">
                        <a asp-action="GestionProductos" asp-controller="Producto">
                            <img src="~/Extras/productos.png" alt="Productos" />
                        </a>
                    </div>
                    <div class="iconosnav">
                        <a asp-action="GestionInformes" asp-controller="Informes">
                            <img src="~/Extras/Informes.png" alt="Informes" />
                        </a>
                    </div>
                    <div class="iconosnav">
                        <a asp-action="GestionEscaneos" asp-controller="Escaneos">
                            <img src="~/Extras/escaner.png" alt="Informes" />
                        </a>
                    </div>
                }

                @if (isControlCalidad)
                {
                    <div class="iconosnav">
                        <a asp-action="Index" asp-controller="Controlcalidad">
                            <img src="~/Extras/home.png" alt="Inicio" />
                        </a>
                    </div>
                    <div class="iconosnav">
                        <a asp-action="Controles" asp-controller="Controles">
                            <img src="~/Extras/controles.png" alt="Controles" />
                        </a>
                    </div>
                    <div class="iconosnav">
                        <a asp-action="GestionProductos" asp-controller="Producto">
                            <img src="~/Extras/productos.png" alt="Productos" />
                        </a>
                    </div>
                    <div class="iconosnav">
                        <a asp-action="GestionInformes" asp-controller="Informes">
                            <img src="~/Extras/Informes.png" alt="Informes" />
                        </a>
                    </div>
                    <div class="iconosnav">
                        <a asp-action="GestionEscaneos" asp-controller="Escaneos">
                            <img src="~/Extras/escaner.png" alt="Informes" />
                        </a>
                    </div>
                }
            </div>
            <div class="login-btn">
                <div class="div2">
                    @if (isEspecialista)
                    {
                        <img class="icono-lapiz" src="~/Extras/especialista.png" alt="Especialista">
                        <div class="welcome-container">
                            <span class="welcome-text">Bienvenido!</span>
                            <p style="font-size:12px;">@GetFirstNameAndSurnameB(ViewBag.trab.Nombre)</p>

                            @functions {
                            public string GetFirstNameAndSurnameB(string fullName)
                            {
                                if (string.IsNullOrEmpty(fullName))
                                {
                                    return string.Empty;
                                }

                                var nameParts = fullName.Split(' ');

                                if (nameParts.Length >= 2)
                                {
                                    return nameParts[0] + " " + nameParts[2];
                                }

                                return nameParts[0];
                            }
                        }
                        <p style="font-size:12px;">Especialista</p>
                    </div>
                    }

                    @if (isControlCalidad)
                    {
                        <img class="icono-lapiz" src="~/Extras/controldecalidad.png" alt="Especialista">
                        <div class="welcome-container">
                            <span class="welcome-text">Bienvenido!</span>
                            <p style="font-size:12px;">@GetFirstNameAndSurnameBC(ViewBag.trab.Nombre)</p>

                            @functions {
                            public string GetFirstNameAndSurnameBC(string fullName)
                            {
                                if (string.IsNullOrEmpty(fullName))
                                {
                                    return string.Empty;
                                }

                                var nameParts = fullName.Split(' ');

                                if (nameParts.Length >= 2)
                                {
                                    return nameParts[0] + " " + nameParts[2];
                                }

                                return nameParts[0];
                            }
                        }
                        <p style="font-size:10px;">Control de Calidad</p>
                    </div>
                    }
                </div>
                <button id="showOptionUser" onclick="showOptionUser()">
                    <i class="fa-solid fa-caret-down"></i>
                </button>
                <div id="opcionesUser" style="display: none">
                    <ul>
                        <li>
                            <a style="color:white;" asp-action="Details" asp-controller="Usuario" asp-route-id="@ViewBag.trab.Id">
                                Editar usuario
                            </a>
                        </li>

                        <li>
                            <a asp-controller="Auth" asp-action="LogOut" class="dropdown-item" style="color:red; text-decoration:none;">
                                Cerrar sesión
                            </a>
                        </li>
                    </ul>
                </div>
            </div>
        </nav>
    </header>
    <div class="content">
        <div class="content">
            <h2 class="accesotitulo">Informe</h2>
        </div>
    </div>

    <main>
        <section class="informesContainer">
            <div class="cabezaInforme">

                <h2 style="font-family: Arial;">Informe N° @ViewBag.IdInforme</h2>
                <p style="font-family: Arial;">Fecha de generación: @ViewBag.Fecha</p>

            </div>

            <div>
                <div class="Título">
                    <h3 style="font-family: Arial; margin-bottom: 8px;"> <strong>Título:</strong> @ViewBag.titulo</h3>
                </div>
                <div class="enfoque" style="font-family: Arial;">
                    <strong >Enfoque:</strong> @ViewBag.enfoque
                </div>
                <div class="Contenido" style="font-family: Arial;">
                    <strong>Contenido:</strong> @ViewBag.contenido
                </div>
                <div class="encargado" style="font-family: Arial;">Generado por @ViewBag.nombreEncargado con ia.</div>
            </div>
            <button id="descargarInforme"><i class="fa-solid fa-file-pdf"></i> Descargar PDF</button>
        </section>
    </main>
    <script>
        document.addEventListener("DOMContentLoaded", function() {
            document.getElementById("descargarInforme").addEventListener("click", function () {
                const button = document.getElementById("descargarInforme");
                button.style.display = "none"; 

                const informeContainer = document.querySelector(".informesContainer");

                const options = {
                    margin: [10, 0, 0, 10], 
                    filename: 'informe.pdf',
                    jsPDF: {
                        unit: 'mm',
                        format: 'a4',
                        orientation: 'portrait'
                    }
                };

                html2pdf(informeContainer, options).then(function () {
                    button.style.display = "block";
                });
            });
        });
    </script>


</body>

<script src="~/js/quagga.min.js"></script>
<script src="~/js/especialista.js"></script>

</html>


@*<script src="https://cdn.jsdelivr.net/npm/@@tensorflow/tfjs"></script>
<script src="https://cdn.jsdelivr.net/npm/@@tensorflow-models/coco-ssd"></script>
<div class="col-sm-4">
    <div class="row justify-content-center">

        <div style="text-align:center;" id="deteccion"></div>

            <div style="flex: 1;">
                <h2>Vista Reconocimiento</h2>
                <video id="video" width="640" height="480" autoplay></video>
            </div>
            <div style="flex: 1;">
                <canvas id="canvas" width="640" height="480"></canvas>
            </div>
        



    </div></div>

    <script>
    async function detectObjects() {
        const video = document.getElementById('video');
        const canvas = document.getElementById('canvas');
        const ctx = canvas.getContext('2d');

        // Cargar el modelo preentrenado COCO-SSD
        const model = await cocoSsd.load();

        // Dimensiones físicas estimadas del objeto en metros
        const objectWidth = 0.02;  // Ancho del objeto en metros
        const objectHeight = 0.2;// Altura del objeto en metros
        const assumedDistance = 0.25; // Distancia estimada de la cámara al objeto en metros

        // Obtener el stream de la cámara
        const stream = await navigator.mediaDevices.getUserMedia({ video: {} });
        video.srcObject = stream;

        // Esperar a que la cámara cargue y realizar la detección en bucle
        video.addEventListener('loadeddata', async () => {
            while (true) {
                // Realizar la detección de objetos
                const predictions = await model.detect(video);

                // Dibujar las predicciones en el canvas
                ctx.clearRect(0, 0, canvas.width, canvas.height);
                predictions.forEach(prediction => {
                    ctx.beginPath();
                    ctx.rect(
                        prediction.bbox[0],
                        prediction.bbox[1],
                        prediction.bbox[2],
                        prediction.bbox[3]
                    );
                    ctx.lineWidth = 2;
                    ctx.strokeStyle = 'red';
                    ctx.fillStyle = 'red';
                    ctx.stroke();
                    ctx.fillText(
                        `${prediction.class} (${Math.round(prediction.score * 100)}%)`,
                        prediction.bbox[0],
                        prediction.bbox[1] > 10 ? prediction.bbox[1] - 5 : 10
                    );

                    // Calcular dimensiones estimadas en metros
                    const estimatedWidth = (objectWidth * canvas.width) / prediction.bbox[2];
                    const estimatedHeight = (objectHeight * canvas.height) / prediction.bbox[3];

                    // Mostrar dimensiones estimadas en el HTML
                    const infoDiv = document.getElementById('deteccion');

                    if (prediction.class == "bottle") {
                        infoDiv.innerHTML = "";
                        infoDiv.innerHTML = `
                            <p>Object: ${prediction.class}</p>
                            <p>Estimated Width: ${estimatedWidth.toFixed(2)} meters</p>
                            <p>Estimated Height: ${estimatedHeight.toFixed(2)} meters</p>
                        `;
                    }

                    
                });

                // Esperar un breve periodo antes de la próxima detección
                await new Promise(resolve => requestAnimationFrame(resolve));
            }
        });
    }

    // Iniciar la detección de objetos cuando la ventana haya cargado completamente
    window.onload = detectObjects;

    </script>*@
